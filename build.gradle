/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'ravitej' at '19/3/14 9:37 AM' with Gradle 1.10
 *
 * This generated file contains a sample Groovy project to get you started.
 * For more details take a look at the Groovy Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.10/userguide/tutorial_groovy_projects.html
 */

// Apply the groovy plugin to add support for Groovy
apply plugin: 'groovy'
apply plugin: 'maven'
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "net.saliman:gradle-cobertura-plugin:2.2.2"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.4.0'
    }
}
apply plugin: 'cobertura'
apply plugin: 'coveralls'

cobertura.coverageFormats = ['html', 'xml'] // coveralls plugin depends on xml format report
cobertura.coverageSourceDirs = sourceSets.main.groovy.srcDirs

sourceCompatibility = 1.7
targetCompatibility = 1.7

version = '0.1-beta1'
group = 'org.cghr'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven() {
        url 'http://csvjdbc.sourceforge.net/maven2'
    }

}

test {
    systemProperties 'property': 'value'
    include 'testResources'
    include 'src/integrationTest/**/*Spec.class'
    include "**/*Spec.class"
}

sourceSets {
    // Note that just declaring this sourceset creates two configurations.
    integrationTest {
        groovy {
            compileClasspath += main.output
            runtimeClasspath += main.output
        }
    }
}

configurations {
    intTestCompile.extendsFrom testCompile
    intTestRuntime.extendsFrom testRuntime
}

task intTest(type: Test) {
    description = "Run integration tests (located in src/intTest/...)."
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
}

//sourceSets {
//    integrationTest
//}
//
//
//task intTest(type: Test) {
//    testClassesDir = sourceSets.integrationTest.output.classesDir
//    classpath = sourceSets.integrationTest.runtimeClasspath
//
//}

String springVersion = '4.1.0.RELEASE'
// In this section you declare the dependencies for your production and test code
configurations {
    provided
    provided.extendsFrom(compile)
}

assemble.dependsOn clean
check.dependsOn intTest



dependencies {

    // We use the latest groovy 2.x version for building this library
    compile 'org.codehaus.groovy:groovy-all:2.2.0'
    compile "org.springframework:spring-context:$springVersion";
    compile 'com.google.code.gson:gson:2.2.4'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2';
    compile 'com.github.jknack:handlebars:1.3.0'
    compile 'net.sourceforge.csvjdbc:csvjdbc:1.0.18'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile(group: "com.github.fge", name: "json-schema-validator", version: "2.2.5");

    //We use awesome spock framework for testing
    testCompile 'org.spockframework:spock-unitils:0.7-groovy-2.0'
    testCompile 'cglib:cglib-nodep:3.1'
    testCompile 'org.springframework:spring-mock:2.0.8'
    testCompile "org.springframework:spring-jdbc:$springVersion"
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile 'org.spockframework:spock-spring:0.7-groovy-2.0'
    testCompile 'com.h2database:h2:1.3.174'
    testCompile 'org.objenesis:objenesis:2.1'
    testCompile 'com.github.tomakehurst:wiremock:1.36'
    testCompile 'org.slf4j:slf4j-api:1.7.5'

    integrationTestCompile configurations.testCompile + sourceSets.main.output + sourceSets.test.output
    integrationTestRuntime configurations.testRuntime


}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}
