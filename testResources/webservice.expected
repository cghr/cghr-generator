import org.cghr.datamodel.DataModelUtil;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller
@RequestMapping("/GridService")
class GridService{

	String sql = "";
	String filters = "";
	String sortings = "";



	// User
    	@RequestMapping(value = "/user", method = RequestMethod.GET, produces = "application/json")
    	@ResponseBody
    	String getUser ( ) {

    		sql = "select id,username from user";
    		filters = "#text_filter,#text_filter";
    		sortings = "int,str";

    		return constructJsonResponse(sql, filters, sortings, new Object[]{   });

    	}


	// Country
    	@RequestMapping(value = "/continent/{continentId}/country", method = RequestMethod.GET, produces = "application/json")
    	@ResponseBody
    	String getCountry (   @PathVariable Integer continentId  ) {

    		sql = "select id,name from country where continentId=?";
    		filters = "#text_filter,#text_filter";
    		sortings = "int,str";

    		return constructJsonResponse(sql, filters, sortings, new Object[]{    continentId   });

    	}
    	// State
            	@RequestMapping(value = "/continent/{continentId}/country/{countryId}/state", method = RequestMethod.GET, produces = "application/json")
            	@ResponseBody
            	String getState (   @PathVariable Integer continentId,@PathVariable Integer countryId  ) {

            		sql = "select id,name from state where continentId=? and countryId=?";
            		filters = "#text_filter,#text_filter";
            		sortings = "int,str";

            		return constructJsonResponse(sql, filters, sortings, new Object[]{    continentId,countryId   });

            	}


    // Creating a Json from sql Query
        SuppressWarnings("unchecked")
        String constructJsonResponse(String sql, String filters,String sortings, Object[] params) {

        		return new DataModelUtil().constructJsonResponse(sql, filters,sortings, params);
        }



}